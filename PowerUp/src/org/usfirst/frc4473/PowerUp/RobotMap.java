// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4473.PowerUp;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.Solenoid;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveleftDriveSpark;
    public static SpeedController driverightDriveSpark;
    public static DifferentialDrive driveroboDrive;
    public static SpeedController liftleftLiftVic;
    public static SpeedController liftrightLiftVic;
    public static Compressor armgrabbyCompressor;
    public static Solenoid hug;
    public static SpeedController clawLiftVic;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @SuppressWarnings("deprecation") //Removes yellow lines
	public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveleftDriveSpark = new Spark(0);
        LiveWindow.addActuator("drive", "leftDriveSpark", (Spark) driveleftDriveSpark);
        driveleftDriveSpark.setInverted(false);
        
        driverightDriveSpark = new Spark(1);
        LiveWindow.addActuator("drive", "rightDriveSpark", (Spark) driverightDriveSpark);
        driverightDriveSpark.setInverted(false);
        
        driveroboDrive = new DifferentialDrive(driveleftDriveSpark, driverightDriveSpark);
        
        driveroboDrive.setSafetyEnabled(true);
        driveroboDrive.setExpiration(0.1);
        driveroboDrive.setMaxOutput(1.0);

        liftleftLiftVic = new VictorSP(3);
        LiveWindow.addActuator("lift", "leftLiftVic", (VictorSP) liftleftLiftVic);
        liftleftLiftVic.setInverted(false);
        
        liftrightLiftVic = new Spark(4);
        LiveWindow.addActuator("lift", "rightLiftVic", (Spark) liftrightLiftVic);
        liftrightLiftVic.setInverted(false);
        
        armgrabbyCompressor = new Compressor(5);
        hug = new Solenoid(1);
        
        clawLiftVic = new VictorSP(6);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
